;;; -*- coding: utf-8; -*-
;;; Automatically generated on Fri Aug 17 16:26:03 2018
;;; Invoked by tony@bogon using 26.1
(setq-default kill-ring '(#("(add-hook 'rust-mode-hook #'racer-mode)
(add-hook 'racer-mode-hook #'eldoc-mode)

" 0 1 (face \.\.\. fontified t) 1 10 (fontified t) 10 11 (face highlight-quoted-quote fontified t) 11 25 (face highlight-quoted-symbol fontified t) 25 26 (fontified t) 26 28 (face highlight-quoted-quote fontified t) 28 38 (face highlight-quoted-symbol fontified t) 38 39 (face \.\.\. fontified t) 39 40 (fontified t) 40 41 (fontified t face \.\.\.) 41 50 (fontified t) 50 51 (fontified t face highlight-quoted-quote) 51 66 (fontified t face highlight-quoted-symbol) 66 67 (fontified t) 67 69 (fontified t face highlight-quoted-quote) 69 79 (fontified t face highlight-quoted-symbol) 79 80 (fontified t face \.\.\.) 80 81 (fontified t) 81 82 (fontified t)) "(add-hook 'rust-mode-hook #'racer-mode)
(add-hook 'racer-mode-hook #'eldoc-mode)"))
(setq-default session-file-alist '(("~/.emacs.d/custom.el" 1 nil 1 nil nil 4099 (overwrite-mode)) ("~/.emacs.d/lisp/init-local.el" 2744 3708 1 nil nil 2744 (overwrite-mode)) ("~/.emacs.d/elpa-26.1/racer-20180709.625/racer-autoloads.el" 871 nil 1 nil nil 871 (overwrite-mode)) ("~/Desktop/PCCAPI/src/view/daily_sentence_view.py" 1689 407 1 nil nil 2296 (overwrite-mode)) ("~/.emacs.d/elpa-26.1/company-anaconda-20180611.621/company-anaconda-autoloads.el" 660 nil 1 nil nil 660 (overwrite-mode)) ("~/.emacs.d/init.el" 3256 3147 1 nil nil 3256 (overwrite-mode)) ("~/.emacs.d/elpa-26.1/elpy-20180707.1413/elpy.el" 122931 nil 1 nil nil 123802 (overwrite-mode)) ("~/Desktop/Tony/go/defer.go" 168 168 1 nil nil 168 (overwrite-mode)) ("~/.emacs.d/elpa-26.1/dumb-jump-20180616.414/dumb-jump-autoloads.el" 2221 nil 1 nil nil 2221 (overwrite-mode)) ("~/.emacs.d/elpa-26.1/spacemacs-theme-20180618.1829/spacemacs-theme-autoloads.el" 1287 nil 1 nil nil 1287 (overwrite-mode)) ("~/Desktop/Tony/go/array.go" 498 349 1 nil nil 498 (overwrite-mode)) ("~/Desktop/PCCAPI/src/view/address_view.py" 1205 374 1 nil nil 5736 (overwrite-mode)) ("~/Desktop/PCCAPI/src/view/coffee_view.py" 1156 1 1 nil nil 1753 (overwrite-mode)) ("~/Desktop/adsfwefasdfwae/pages/index/index.wxml" 1 1707 1 nil nil 1271 (overwrite-mode)) ("~/Desktop/Tony/HTML5/action/form1.html" 295 180 1 nil nil 295 (overwrite-mode)) ("~/Desktop/Tony/HTML5/OneHTML.html" 128 nil 1 nil nil 1 (overwrite-mode)) ("~/Desktop/Tony/HTML5/2-gd.html" 302 1 1 nil nil 302 (overwrite-mode)) ("~/.emacs.d/elpa-26.1/web-mode-20180813.1350/web-mode-autoloads.el" 498 nil 1 nil nil 498 (overwrite-mode)) ("~/.emacs.d/elpa-26.1/vue-mode-20180516.312/vue-mode-autoloads.el" 787 nil 1 nil nil 787 (overwrite-mode)) ("~/.emacs.d/elpa-26.1/vue-html-mode-20180428.2035/vue-html-mode-autoloads.el" 528 nil 1 nil nil 528 (overwrite-mode)) ("~/.emacs.d/elpa-26.1/ssass-mode-20180428.2039/ssass-mode-autoloads.el" 491 nil 1 nil nil 491 (overwrite-mode)) ("~/.emacs.d/elpa-26.1/edit-indirect-20180422.1807/edit-indirect-autoloads.el" 1730 nil 1 nil nil 1730 (overwrite-mode)) ("~/Desktop/Tony/HTML5/div/div2.html" 528 300 1 nil nil 528 (overwrite-mode)) ("~/Desktop/Tony/HTML5/div/div1.html" 452 nil 1 nil nil 471 (overwrite-mode)) ("~/Desktop/Tony/HTML5/table/nested.html" 1620 422 1 nil nil 422 (overwrite-mode)) ("~/Desktop/Tony/HTML5/table/tbody.html" 1058 nil 1 nil nil nil (overwrite-mode)) ("~/Desktop/Tony/HTML5/table/thead.html" 361 306 1 nil nil 571 (overwrite-mode)) ("~/.emacs.d/elpa-26.1/web-mode-20180809.2128/web-mode-autoloads.el" 498 nil 1 nil nil 498 (overwrite-mode)) ("~/Desktop/Tony/HTML5/table/table_rowspan.html" 438 254 1 nil nil 438 (overwrite-mode)) ("~/Desktop/Tony/HTML5/table/table_colspan.html" 85 651 1 nil nil 85 (overwrite-mode)) ("~/Desktop/Tony/HTML5/table/table1.html" 261 760 1 nil nil 261 (overwrite-mode)) ("~/Desktop/Tony/HTML5/link/link1.html" 16 293 1 nil nil 322 (overwrite-mode)) ("~/Desktop/Tony/HTML5/four_chapter/list3.html" 296 nil 1 nil nil 296 (overwrite-mode)) ("~/Desktop/Tony/HTML5/four_chapter/list2.html" 487 492 1 nil nil 492 (overwrite-mode)) ("~/Desktop/Tony/HTML5/four_chapter/list.html" 88 281 1 nil nil 88 (overwrite-mode)) ("~/Desktop/Tony/HTML5/third_chapter/text.html" 506 343 1 nil nil 506 (overwrite-mode)) ("~/Desktop/Tony/HTML5/slyl.html" 558 1 1 nil nil nil (overwrite-mode)) ("~/Desktop/Tony/HTML5/margin.html" 167 1 1 nil nil 167 (overwrite-mode)) ("~/Desktop/Tony/HTML5/2-exit.html" 367 367 1 nil nil 242 (overwrite-mode)) ("~/Desktop/Tony/HTML5/base.html" 232 232 1 nil nil 141 (overwrite-mode)) ("~/.emacs.d/elpa-26.1/emmet-mode-20180613.341/emmet-mode-autoloads.el" 1691 nil 1 nil nil 1691 (overwrite-mode)) ("~/Desktop/Tony/HTML5/meta.html" 194 253 1 nil nil 253 (overwrite-mode)) ("~/Desktop/Tony/HTML5/image4.html" 181 nil 1 nil nil 1 (overwrite-mode)) ("~/Desktop/Tony/org/test.org" 110 47 1 nil nil 87 (overwrite-mode)) ("~/Desktop/Tony/org/test.tex" 32 nil 1 nil nil 711 (overwrite-mode)) ("~/Desktop/Tony/Python/FirstTestAppDemo/app.py" 60 144 1 nil nil 145 (overwrite-mode)) ("~/.emacs.d/lisp/init-elpa.el" 1 2779 1 nil nil 20 (overwrite-mode)) ("~/Documents/AWS/Administrator.pem" 381 1 1 nil nil 381 (overwrite-mode)) ("~/Desktop/Tony/AWS/Test/test.MD" 6 nil 1 nil nil 7 (overwrite-mode)) ("~/Desktop/Tony/Python/python-getting-started/tomatotodo/views/todos.py" 389 431 1 nil nil 389 (overwrite-mode)) ("~/Desktop/Tony/Python/flask-tutorial/flaskr/db.py" 351 629 1 nil nil nil (overwrite-mode)) ("~/Desktop/Tony/Python/flask-tutorial/flaskr/auth.py" 2481 413 1 nil nil 6 (overwrite-mode)) ("~/Desktop/Tony/Python/flask-tutorial/flaskr/__init__.py" 647 37 1 nil nil 574 (overwrite-mode)) ("~/Desktop/PCCAPI/src/view/captcha_view.py" 2644 2116 1 nil nil 1045 (overwrite-mode)) ("~/Desktop/Tony/Python/python-getting-started/tomatotodo/app.py" 175 106 1 nil nil 175 (overwrite-mode)) ("~/Desktop/Tony/Python/python-getting-started/tomatotodo/cloud.py" 330 nil 1 nil nil 56 (overwrite-mode)) ("~/.emacs.d/elpa-26.1/helm-gtags-20170116.529/helm-gtags-autoloads.el" 3545 nil 1 nil nil 3545 (overwrite-mode)) ("~/.emacs.d/elpa-26.1/helm-ag-20170209.1545/helm-ag-autoloads.el" 1031 nil 1 nil nil 1031 (overwrite-mode)) ("~/Desktop/Tony/Python/python-getting-started/README.md" 1 nil 1 nil nil 1 (overwrite-mode)) ("~/Desktop/Tony/Python/python-getting-started/tomatotodo/wsgi.py" 876 876 1 nil nil 1118 (overwrite-mode)) ("~/Desktop/Tony/Python/python-getting-started/tomatotodo/LICENSE" 1 nil 1 nil nil 1 (overwrite-mode)) ("~/Desktop/StorageStarted/iOS/Podfile" 77 nil 1 nil nil nil (overwrite-mode)) ("~/Desktop/Tony/Python/FirstTestAppDemo/__init__.py" 1 nil 1 nil nil 1 (overwrite-mode)) ("~/Desktop/PCCAPI/src/dal/baseUtils.py" 1232 1232 1 nil nil 369 (overwrite-mode)) ("~/Desktop/PCCAPI/src/view/version_update_view.py" 319 2040 1 nil nil 2074 (overwrite-mode)) ("~/Desktop/PCCAPI/src/config.py" 937 937 1 nil nil 3181 (overwrite-mode)) ("~/Desktop/PCCAPI/src/utils/EmailUtil.py" 151 nil 1 nil nil 1002 (overwrite-mode)) ("~/Desktop/PCCAPI/src/utils/CCPRestSDK.py" 13324 7935 1 nil nil 23410 (overwrite-mode)) ("~/Desktop/PCCAPI/src/sign/SignUtil.py" 1 nil 1 nil nil 2923 (overwrite-mode)) ("~/Desktop/PCCAPI/src/sign/Gl.py" 1 nil 1 nil nil 435 (overwrite-mode)) ("~/Desktop/PCCAPI/src/app.py" 14672 11086 1 nil nil 15790 (overwrite-mode)) ("~/Desktop/Tony/Python/flask-tutorial/flaskr/blog.py" 793 233 1 nil nil 793 (overwrite-mode)) ("~/Desktop/Tony/Python/flask-tutorial/tests/conftest.py" 11 70 1 nil nil 70 (overwrite-mode)) ("~/Desktop/Tony/Python/flask-tutorial/setup.cfg" 82 1 1 nil nil 82 (overwrite-mode)) ("~/Desktop/Tony/Python/flask-tutorial/setup.py" 45 220 1 nil nil 45 (overwrite-mode))))
(setq-default file-name-history '("~/Desktop/Tony/Python/flask-tutorial/flaskr/__init__.py" "/usr/local/Cellar/python@2/2.7.15_1/Frameworks/Python.framework/Versions/2.7/lib/python2.7/functools.py" "~/Desktop/Tony/HTML5/images/1.jpg" "~/Desktop/Tony/HTML5/refresh.html" "~/Desktop/Tony/HTML5/test.html" "~/Desktop/Tony/HTML5/image4.html" "~/Desktop/Tony/HTML5/image1.html" "~/Desktop/Tony/HTML5/image.html" "~/Desktop/Tony/HTML5/meta.html" "~/Desktop/Tony/Python/flask-tutorial/flaskr/auth.py" "~/.emacs.d/elpa-26.1/flycheck-20180720.247/flycheck.el" "~/.emacs.d/elpa-26.1/yasnippet-snippets-20180714.622/snippets/html-mode/html" "~/Desktop/Tony/HTML5/top.html" "~/Desktop/Tony/HTML5/base.html" "~/Desktop/Tony/HTML5/2-exit.html" "~/Desktop/Tony/HTML5/text/text1.html" "~/.emacs.d/elpa-26.1/yasnippet-snippets-20180714.622/snippets/html-mode/meta.http-equiv" "~/.emacs.d/elpa-26.1/yasnippet-snippets-20180714.622/snippets/html-mode/link.stylesheet-ie" "~/Desktop/Tony/HTML5/margin.html" "~/Desktop/Tony/HTML5/slyl.html" "~/Desktop/Tony/HTML5/third_chapter/text.html" "~/Desktop/Tony/HTML5/four_chapter/list.html" "~/Desktop/Tony/HTML5/four_chapter/list3.html" "~/Desktop/Tony/HTML5/link/link1.html" "~/Desktop/Tony/HTML5/table/table1.html" "~/Desktop/Tony/HTML5/table/table_colspan.html" "~/.emacs.d/lisp/init-clojure.el" "~/Desktop/Tony/HTML5/table/table_rowspan.html" "~/Desktop/Tony/HTML5/table/thead.html" "~/Desktop/Tony/HTML5/table/tbody.html" "~/Desktop/Tony/HTML5/table/nested.html" "~/Desktop/Tony/HTML5/div/div2.html" "/usr/local/lib/python2.7/site-packages/werkzeug/security.py" "~/Desktop/adsfwefasdfwae/app.json" "~/Desktop/adsfwefasdfwae/utils/util.js" "~/Desktop/adsfwefasdfwae/pages/index/index.json" "~/Desktop/Tony/HTML5/2-gd.html" "~/Desktop/Tony/HTML5/OneHTML.html" "~/Desktop/Tony/Python/flask-tutorial/htmlcov/flaskr_auth_py.html" "/usr/local/go/src/fmt/print.go" "~/Desktop/Tony/Python/python-getting-started/tomatotodo/views/todos.py" "~/Desktop/Tony/Python/python-getting-started/.DS_Store" "~/Desktop/Tony/Python/flask-tutorial/flaskr/db.py" "~/Desktop/Tony/HTML5/action/form1.html" "~/Desktop/Tony/Python/python-getting-started/tomatotodo/cloud.py" "~/Desktop/Tony/Python/python-getting-started/tomatotodo/app.py" "~/Desktop/Tony/Python/FirstTestAppDemo/__init__.py" "~/.emacs.d/lisp/init-elpa.el" "~/.emacs.d/lisp/init-lisp.el" "~/Desktop/Tony/HTML5/four_chapter/list2.html" "~/Desktop/Tony/Python/FirstTestAppDemo/app.py" "~/Desktop/Tony/HTML5/div/div1.html" "~/Desktop/adsfwefasdfwae/app.wxss" "~/Desktop/adsfwefasdfwae/pages/index/index.wxml" "~/Desktop/PCCAPI/src/view/coffee_view.py" "~/Desktop/PCCAPI/src/view/address_view.py" "~/Desktop/Tony/go/defer.go" "~/Desktop/Tony/go/array.go" "/Applications/Emacs.app/Contents/Resources/lisp/progmodes/xref.el.gz" "/Applications/Emacs.app/Contents/Resources/lisp/simple.el.gz" "/Applications/Emacs.app/Contents/Resources/lisp/subr.el.gz" "~/.emacs.d/elpa-26.1/elpy-20180707.1413/elpy.el" "~/.emacs.d/init.el" "~/.emacs.d/lisp/init-themes.el" "~/.emacs.d/lisp/init-org.el" "~/.emacs.d/lisp/init-local.el" "~/Desktop/PCCAPI/src/view/daily_sentence_view.py"))
(setq-default search-ring '("init-" "definition" "theme" "thead" "init-loa" "init-lo" "th" "init-loc" "shell" "<!--" "2-" "init-load" "2-gd"))
(setq-default regexp-search-ring '("asdf"))
(setq-default Info-search-history '("REST"))
(setq-default buffer-name-history '("*shell*" #("div2" 0 4 (ivy-index 0)) #("test.org" 0 8 (ivy-index 0)) #("57" 0 2 (ivy-index 0)) "TestCrachDemo" #("d" 0 1 (ivy-index 23)) "TestCrachDemo • Desktop" "NSDictionary+Crash.m"))
(setq-default coding-system-history '("nil" #("utf" 0 3 (ivy-index 0))))
(setq-default compile-history '("add"))
(setq-default counsel-descbinds-history '("C-c ! p         flycheck-previous-error"))
(setq-default counsel-describe-symbol-history '("Info-find-file" #("all-the-icons-data" 0 18 (ivy-index 0))))
(setq-default counsel-git-grep-cmd-history '("git --no-pager grep --full-name -n --no-color -i -I -e \"%s\""))
(setq-default elpy-doc-history '(#("baseUtils.response_obj_msg" 0 26 (ivy-index 0)) #("db.commit" 0 9 (ivy-index 0)) #("form" 0 4 (ivy-index 0)) #("request.form" 0 12 (ivy-index 0)) #("BaseUtils" 0 9 (ivy-index 0)) #("db" 0 2 (ivy-index 0)) #("sa_obj_to_dict" 0 14 (ivy-index 0)) #("baseUtils.response_msg" 0 22 (ivy-index 0)) #("request.args.get" 0 16 (ivy-index 0)) #("sessionmaker" 0 12 (ivy-index 0)) #("sqlalchemy.orm" 0 14 (ivy-index 0)) #("assert" 0 6 (ivy-index 0)) #("route" 0 5 (ivy-index 0)) #("bp.route" 0 8 (ivy-index 0))))
(setq-default face-name-history '("hl-line"))
(setq-default gomoku-game-history '((324 . 815926) (286 . 294) (285 . 30947) (248 . 315) (168 . 3713) (167 . 263) (207 . 284) (166 . 203) (246 . 140)))
(setq-default grep-files-history '(#("*.py" 0 4 (ivy-index 0))))
(setq-default grep-find-history '("find . -type f -exec grep --color -nH --null -e response_msg \\{\\} +" "find . -type f -exec grep --color -nH --null -e response_obj_msg \\{\\} +" "find . -type f -exec grep --color -nH --null -e reponse_obj_msg \\{\\} +" "find . -type f -exec grep --color -nH --null -e is_update_version \\{\\} +" "find . -type f -exec grep --color -nH --null -e APK_BASE_PATH \\{\\} +" "find . -type f -exec grep --color -nH --null -e init_app \\{\\} +" "find . -type f -exec grep --color -nH --null -e jsonify \\{\\} +" "find . -type f -exec grep --color -nH --null -e render_template \\{\\} +" "find . -type f -exec grep --color -nH --null -e request.method \\{\\} +" "find . -type f -exec grep --color -nH --null -e request \\{\\} +" "find . -type f -exec grep --color -nH --null -e view_func \\{\\} +" "find . -type f -exec grep --color -nH --null -e aes_base64 \\{\\} +" "find . -type f -exec grep --color -nH --null -e encrypt_password \\{\\} +" "find . -type f -exec grep --color -nH --null -e validate_password \\{\\} +" "find . -type f -exec grep --color -nH --null -e password \\{\\} +" "find . -type f -exec grep --color -nH --null -e csv_file \\{\\} +" "find . -type f -exec grep --color -nH --null -e find_element \\{\\} +" "find . -type f -exec grep --color -nH --null -e barista_query \\{\\} +"))
(setq-default grep-history '("grep --color -nH --null -e response_msg" "grep --color -nH --null -e commit_comment" "grep --color -nH --null -e Print" "grep --color -nH --null -e "))
(setq-default grep-regexp-history '("print" "barista_qurey"))
(setq-default helm-ff-history '("/Users/tony/Desktop/Tony/Python/python-getting-started/tomatotodo/views/" "/Users/tony/Desktop/PCCAPI/src/view/" "/Users/tony/Desktop/Tony/go/"))
(setq-default helm-file-name-history '("view" "address_view.py" "Python" "README.md" "cloud.py" "index.html" "todos.html" "todos.py" "setup.py" "auth.py" "issue_template.md" "wsgi.py" "app.py" "init-local.el" "flask-tutorial" "helm" "packages" "Desktop" "error.txt" "menu_sleep_timer.xml" "AUTHORS" "test.txt" "python-getting-started" "views" "templates" "static" "address_model.py" "models.py" "baseUtils.py" "tomatotodo" ".python-version" "current_group" "current_app_id" "recent_linked_apps" "#todos.py#" "__init__.py"))
(setq-default helm-grep-ag-history '("res"))
(setq-default helm-gtags--completing-history '(#("response_obj_msg" 0 16 (fontified t))))
(setq-default helm-source-complex-command-history '((name . "Complex Command History") (candidates closure (t) nil (let* \.\.\. \.\.\. \.\.\.)) (keymap keymap \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. keymap \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\.) (action ("Eval" closure \.\.\. \.\.\. \.\.\. \.\.\. \.\.\.) ("Edit and eval" closure \.\.\. \.\.\. \.\.\.)) (persistent-action . helm-sexp-eval) (multiline) (filtered-candidate-transformer helm-fuzzy-highlight-matches) (match helm-mm-exact-match helm-mm-match) (redisplay . identity) (header-line . "C-j: helm-sexp-eval (keeping session)") (multimatch) (group . helm)))
(setq-default helm-source-file-name-history '((name . "File Name History") (candidates . file-name-history) (keymap keymap \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. keymap \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\.) (action . helm-type-file-actions) (persistent-action . ignore) (filtered-candidate-transformer helm-file-name-history-transformer helm-fuzzy-highlight-matches) (match helm-mm-exact-match helm-mm-match) (redisplay . identity) (header-line . "C-j: ignore (keeping session)") (multimatch) (group . helm)))
(setq-default helm-source-global-mark-ring '((name . "global-mark-ring") (candidates . helm-global-mark-ring-get-candidates) (keymap keymap \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. keymap \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\.) (action ("Goto line" . helm-mark-ring-default-action)) (persistent-help . "Show this line") (filtered-candidate-transformer helm-fuzzy-highlight-matches) (match helm-mm-exact-match helm-mm-match) (redisplay . identity) (header-line . "C-j: Show this line (keeping session)") (multimatch) (group . helm-ring)))
(setq-default helm-source-info-automake-history '((name . "Info Index: automake-history") (init . helm-info-init) (candidates . helm-candidates-in-buffer) (keymap keymap \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. keymap \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\.) (action ("Goto node" . helm-info-goto)) (filtered-candidate-transformer helm-fuzzy-highlight-matches) (display-to-real . helm-info-display-to-real) (volatile) (match identity) (redisplay . identity) (header-line . "C-j: Goto node (keeping session)") (multimatch) (group . helm) (get-line . buffer-substring) (search helm-mm-exact-search helm-mm-search helm-candidates-in-buffer-search-default-fn) (info-file . "automake-history")))
(setq-default helm-source-kill-ring '((name . "Kill Ring") (init closure (t) nil (helm-attrset \.\.\. last-command) (helm-attrset \.\.\. helm-kill-ring-max-offset)) (candidates . helm-kill-ring-candidates) (keymap keymap (3 keymap \.\.\.) (29 . helm-kill-ring-toggle-truncated) (27 keymap \.\.\. \.\.\. \.\.\.) keymap \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. keymap \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\.) (action . helm-kill-ring-actions) (persistent-action . ignore) (persistent-help . "DoNothing") (help-message . helm-kill-ring-help-message) (multiline . helm-kill-ring-max-offset) (filtered-candidate-transformer helm-kill-ring-transformer helm-fuzzy-highlight-matches helm-multiline-transformer) (match helm-mm-exact-match helm-mm-match helm-mm-3-migemo-match) (redisplay . identity) (header-line . "C-j: DoNothing (keeping session)") (multimatch) (group . helm-ring) (migemo)))
(setq-default helm-source-mark-ring '((name . "mark-ring") (candidates . helm-mark-ring-get-candidates) (keymap keymap \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. keymap \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\.) (action ("Goto line" . helm-mark-ring-default-action)) (persistent-help . "Show this line") (filtered-candidate-transformer helm-fuzzy-highlight-matches) (match helm-mm-exact-match helm-mm-match) (redisplay . identity) (header-line . "C-j: Show this line (keeping session)") (multimatch) (group . helm-ring)))
(setq-default magit-revision-history '("origin/master" #("master" 0 6 (ivy-index 0)) #("add" 0 3 (ivy-index 0))))
(setq-default minibuffer-history '("42" "32" "33" "27" "17" "10" "9" "#answerA" "anserC" "answerB" "answerA" "Document" "0" "yes" "http://www.bing.com" "htto://www.baidu.com" "/" "	asdf" "asdf" "title+" "title" "adslkf" "adsf" "adfs" "adf" "sdf" "page-enter" "2-exit.html" "images/i.jpg" "images/1.jpg" "页面的过度效果" "alsdkfjie" "alsdkfj" "1"))
(setq-default occur-collect-regexp-history '("\\1"))
(setq-default query-replace-history '("" "extract_first" "extract_frist"))
(setq-default read-flycheck-checker-history '(#("ht" 0 2 (ivy-index 0)) #("html" 0 4 (ivy-index 0)) #("py" 0 2 (ivy-index 1))))
(setq-default serial-name-history '("/dev/ttys0"))
(setq-default serial-speed-history '("9600" "1200" "2400" "4800" "14400" "19200" "28800" "38400" "57600" "115200"))
(setq-default sgml-tag-history '(#("hr" 0 2 (ivy-index 0)) #("th" 0 2 (ivy-index 2)) #("ca" 0 2 (ivy-index 1)) #("cap" 0 3 (ivy-index 0)) #("font" 0 4 (ivy-index 0)) #("cen" 0 3 (ivy-index 0)) #("br" 0 2 (ivy-index 1)) #("cent" 0 4 (ivy-index 0)) #("body" 0 4 (ivy-index 0)) #("tit" 0 3 (ivy-index 1)) #("head" 0 4 (ivy-index 0)) #("met" 0 3 (ivy-index 0)) #("ma" 0 2 (ivy-index 3)) "meta" "mark" #("me" 0 2 (ivy-index 5)) #("im" 0 2 (ivy-index 0)) #("html" 0 4 (ivy-index 0)) "menu" #("title" 0 5 (ivy-index 0)) #("titl" 0 4 (ivy-index 0))))
(setq-default slime-connect-host-history '("localhost"))
(setq-default slime-connect-port-history '("4005"))
(setq-default smex-history '(py-autopep8 package-delete shell load-theme package-install racer-mode package-list-packages))
(setq-default string-rectangle-history '("# " "asdfasdf"))
(setq-default table-capture-columns-history '(""))
(setq-default table-capture-justify-history '("left"))
(setq-default table-capture-min-cell-width-history '("5"))
(setq-default table-cell-height-history '("1"))
(setq-default table-cell-span-direction-history '("right"))
(setq-default table-cell-split-contents-to-history '("split"))
(setq-default table-cell-split-orientation-history '("horizontally"))
(setq-default table-cell-width-history '("5"))
(setq-default table-col-delim-regexp-history '(""))
(setq-default table-columns-history '("3"))
(setq-default table-insert-row-column-history '("row"))
(setq-default table-justify-history '("center"))
(setq-default table-row-delim-regexp-history '(""))
(setq-default table-rows-history '("3"))
(setq-default table-sequence-count-history '("0"))
(setq-default table-sequence-increment-history '("1"))
(setq-default table-sequence-interval-history '("1"))
(setq-default table-sequence-justify-history '("left"))
(setq-default table-sequence-string-history '("0"))
(setq-default table-source-caption-history '("Table"))
(setq-default table-source-language-history '("html"))
(setq-default table-target-history '("cell"))
(setq-default tmm--history '("7==>Start Code Browser (ECB)" "g==>Games" "e==>Encryption/Decryption" "6==>Simple Calculator" "5==>Programmable Calculator" "4==>Calendar" "b==>Browse the Web..." "D==>Directory Servers" "n==>Compose New Mail         C-x m" "R==>Read Mail" "r==>Read Net News" "v==>Version Control" "a==>Apply Patch" "m==>Merge" "3==>Compare (Ediff)" "2==>Spell Checking" "1==>Syntax Checking" "C==>Source Code Parsers (Semantic)" "P==>Project Support (EDE)" "d==>Debugger (GDB)..." "S==>Shell Command...           M-!" "c==>Compile..." "s==>Search Files (Grep)..." "0==>--" "p==>Projectile"))
(setq-default xref--read-identifier-history '("28: init_app" "9: todos_view" "6: render_template" "25: str" "4: leancloud" "14: return" "17: before_save" "18: todo" "19: get" "3: Engine" "4: Query" #("j" 0 1 (ivy-index 0)) "23: baseUtils" "147: response_obj_msg"))
(setq-default xref--read-pattern-history '("init_app"))
